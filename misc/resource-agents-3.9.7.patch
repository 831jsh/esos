--- a/heartbeat/Raid1	2016-02-03 05:57:55.000000000 -0500
+++ b/heartbeat/Raid1	2018-12-06 10:11:45.706670697 -0500
@@ -182,7 +182,7 @@
 
 md_assemble() {
 	local mddev=$1
-	$MDADM --assemble $mddev --config=$RAIDCONF $MDADM_HOMEHOST
+	ocf_run $MDADM --assemble --run $mddev --verbose --config=$RAIDCONF $MDADM_HOMEHOST
 	udev_settle --exit-if-exists=$mddev
 }
 #
@@ -226,7 +226,7 @@
 	local mddev=$1
 	local rc
 	ocf_log info "Attempting to mark array $mddev readonly"
-	$MDADM --readonly $mddev --config=$RAIDCONF
+	ocf_run $MDADM --readonly $mddev --config=$RAIDCONF
 	rc=$?
 	if [ $rc -ne 0 ]; then
 		ocf_exit_reason "Failed to set $mddev readonly (rc=$rc)"
@@ -246,7 +246,7 @@
 	rm -f $tmp_block_file
 	ocf_log info "block device file $1 missing, creating one in order to stop the array"
 	mknod $tmp_block_file b 9 $n
-	$MDADM --stop $tmp_block_file --config=$RAIDCONF --wait-clean -W
+	ocf_run $MDADM --stop $tmp_block_file --config=$RAIDCONF --wait-clean -W
 	rc=$?
 	rm -f $tmp_block_file
 	return $rc
@@ -254,12 +254,12 @@
 raid1_stop_one() {
 	ocf_log info "Stopping array $1"
 	if [ -b "$1" ]; then
-		$MDADM --stop $1 --config=$RAIDCONF --wait-clean -W &&
+		ocf_run $MDADM --stop $1 --config=$RAIDCONF --wait-clean -W &&
 			return
 	else
 		# newer mdadm releases can stop arrays when given the
 		# basename; try that first
-		$MDADM --stop `basename $1` --config=$RAIDCONF --wait-clean -W &&
+		ocf_run $MDADM --stop `basename $1` --config=$RAIDCONF --wait-clean -W &&
 			return
 		# otherwise create a block device file
 		mknod_raid1_stop $1
@@ -353,14 +353,18 @@
 #
 raid1_monitor_one() {
 	local mddev=$1
-	local md=`echo $mddev | sed 's,/dev/,,'`
+	if [ -L "$mddev" ]; then
+		local md=`readlink -m $mddev | sed 's,/dev/,,'`
+	else
+		local md=`echo $mddev | sed 's,/dev/,,'`
+	fi
 	local rc
 	local TRY_READD=0
 	local pbsize
 	# check if the md device exists first
 	# but not if we are in the stop operation
 	# device existence is important only for the running arrays
-	if [ "$__OCF_ACTION" != "stop" -a ! -b $mddev ]; then
+	if [ "$__OCF_ACTION" != "stop" -a ! -e $mddev ]; then
 		ocf_log info "$mddev is not a block device"
 		return $OCF_NOT_RUNNING
 	fi
@@ -389,9 +393,9 @@
 	if [ "$__OCF_ACTION" = "monitor" -a "$OCF_RESKEY_CRM_meta_interval" != 0 \
 		-a $TRY_READD -eq 1 -a $OCF_CHECK_LEVEL -gt 0 ]; then
 		ocf_log info "Attempting recovery sequence to re-add devices on $mddev:"
-		$MDADM $mddev --fail detached 
-		$MDADM $mddev --remove failed 
-		$MDADM $mddev --re-add missing
+		ocf_run $MDADM $mddev --fail detached 
+		ocf_run $MDADM $mddev --remove failed 
+		ocf_run $MDADM $mddev --re-add missing
 		# TODO: At this stage, there's nothing to actually do
 		# here. Either this worked or it did not.
 	fi
